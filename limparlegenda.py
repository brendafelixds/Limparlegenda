# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'limparlegenda.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QWidget, QLabel, QMainWindow, QApplication, QMessageBox, QDesktopWidget
from PyQt5.QtGui import QPixmap

caminho = ""  

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(697, 309)
        MainWindow.setMinimumSize(QtCore.QSize(697, 309))
        MainWindow.setMaximumSize(QtCore.QSize(697, 309))
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons8-subtitles-50.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("font: 75 11pt \"Ubuntu\";\n"
"image: url(:/newPrefix/scale.jpeg);\n"
"background-color: rgb(0, 0, 0);")
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(290, 210, 131, 31))
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);\n"
"font: 75 11pt \"Ubuntu\";\n"
"font: 75 11pt \"Ubuntu Condensed\";")
        self.pushButton.setObjectName("pushButton")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setEnabled(False)
        self.lineEdit.setGeometry(QtCore.QRect(120, 140, 451, 51))
        self.lineEdit.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 8pt \"Ubuntu\";")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(310, 30, 71, 61))
        self.label_2.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);\n"
"font: 75 11pt \"Ubuntu\";\n"
"font: 75 11pt \"Ubuntu Mono\";\n"
"font: 75 14pt \"Ubuntu Condensed\";\n"
"image: url(:/newPrefix/icons8-baby-yoda-50.png);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setEnabled(True)
        self.label_3.setGeometry(QtCore.QRect(121, 112, 91, 17))
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 75 13pt \"Ubuntu Condensed\";\n"
"background-color: rgb(0, 0, 0);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(108, 278, 481, 20))
        self.label_4.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Ubuntu Condensed\";")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.labelSucesso = QtWidgets.QLabel(self.centralwidget)
        self.labelSucesso.move(270,93)
        self.labelSucesso.resize(600,30)
        self.labelSucesso.setStyleSheet("color: rgb(246, 238, 36);\n"
        "font: 75 13pt \"Ubuntu Condensed\"")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(478, 145, 91, 40))
        self.pushButton_2.setStyleSheet("image: url(:/newPrefix/icons8-add-folder-64.png);\n"
"background-color: rgb(255, 255, 255);\n"
"border: 0px solid black")
        self.pushButton_2.setText("")
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle("Limpar Legenda - R&B")
        self.pushButton.setText(_translate("MainWindow", "LIMPAR"))
        self.label_3.setText(_translate("MainWindow", "Arquivo srt:"))
        self.label_4.setText(_translate("MainWindow", "made by Rafael & Brenda :)"))
        self.pushButton.clicked.connect(self.limparLegenda)
        self.pushButton_2.clicked.connect(self.pegarArquivo)

    def pegarArquivo(self): 
        self.lineEdit.setText("")    
        option = QFileDialog.Option()
        widget = QWidget()
        self.file  = QFileDialog.getOpenFileName(widget, "Pegar legenda", "", "srt (*.srt)", options=option)
        self.lineEdit.setText(self.file[0])
        self.label_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"image: url(:/newPrefix/icons8-baby-yoda-50.png);")
        self.labelSucesso.setText("")
        self.pushButton.isEnabled = True
        self.pushButton.setText("Limpar")   


    def limparLegenda(self):
        try:    
                arquivo = open(self.file[0],'r', encoding='ISO-8859-1') # Abre o arquivo para a leitura
                textoDaLegenda = arquivo.read() # Leitura do arquivo da legenda
                textoDaLegenda = textoDaLegenda.replace("á","a")
                textoDaLegenda = textoDaLegenda.replace("à","a")
                textoDaLegenda = textoDaLegenda.replace("ã","a")
                textoDaLegenda = textoDaLegenda.replace("â","a")
                textoDaLegenda = textoDaLegenda.replace("é","e'")
                textoDaLegenda = textoDaLegenda.replace("ê","e")
                textoDaLegenda = textoDaLegenda.replace("è","e")
                textoDaLegenda = textoDaLegenda.replace("í","i")
                textoDaLegenda = textoDaLegenda.replace("ó","o")
                textoDaLegenda = textoDaLegenda.replace("ô","o")
                textoDaLegenda = textoDaLegenda.replace("õ","o")
                textoDaLegenda = textoDaLegenda.replace("ú","u")
                textoDaLegenda = textoDaLegenda.replace("ù","u")
                textoDaLegenda = textoDaLegenda.replace("ç","c")
                textoDaLegenda = textoDaLegenda.replace("ª","*")
                textoDaLegenda = textoDaLegenda.replace("º","*")
                
                acentoA, acentoE = ['Á','À','Ã','Â'], ['É', 'Ê', 'È']
                acentoI, acentoO = ['Í'], ['Ó', 'Ô', 'Ò', 'Õ']
                acentoU, acentoC = ['Ú','Ù'], ['Ç']
                letrasMaiuculasComAcento = [acentoA, acentoE, acentoI, acentoO, acentoU, acentoC]
                substituirPorLetra = ['A', 'E', 'I', 'O', 'U', 'C']

                qtdeLetrasComAcento = len(letrasMaiuculasComAcento) #Sei a quantidade de letras que serão substituidas

                for i in range(qtdeLetrasComAcento): #qtdade de vezes que terei que rodar letra por letra
                 for letraComAcento in letrasMaiuculasComAcento[i]: #a cada letra, passa por suas variantes com acento
                        textoDaLegenda = textoDaLegenda.replace(letraComAcento, substituirPorLetra[i])
                

                arquivo.close()
                arquivo = open(self.file[0],'w', encoding='ISO-8859-1')
                arquivo.write(textoDaLegenda)
                arquivo.close()



                self.label_2.setStyleSheet("image: url(:/newPrefix/icons8-baby-yoda-48.png);")
                self.pushButton.isEnabled = False
                self.pushButton.setText("")      
                self.labelSucesso.setText("Sua legenda limpa está!")
        except:
                msg = QMessageBox()
                msg.setIconPixmap(QPixmap((":/newPrefix/icons8-baby-yoda-48.png")))
                msg.setText("Nenhuma legenda encontrada")
                msg.setInformativeText('Escolha uma legenda para limpar')
                msg.setWindowTitle("Não encontrei nada")
                msg.exec_()


import img3_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
